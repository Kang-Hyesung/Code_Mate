<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">				

<!-- 루트 엘리먼트 -->
<!-- namespace는 인터페이스 경로를 지정하면 된다.
인터페이스와 연결되는 무언가를 만들겠다.          
IMemberDAO의 역할을 MemberDAO.xml 이 하겠다. 				-->
<mapper namespace="com.test.mybatis.dao.IMemberDAO">

	<!-- list()를 구현하기 위해서 select 가 필요하다 -->
	<!-- id 속성에는 메소드 이름이 들어감 , 개행 공백 규칙 sqldeveloper과 같음-->
	<!-- resultType : 반환하는 결과 타입 select 결과 MemberDTO 타입이 하나씩 나온다.-->
	<select id="list" resultType="com.test.mybatis.dto.MemberDTO">
		SELECT MEM_CODE, ID, PW, NICKNAME, MBTI_CODE, p."PATH" 
		FROM MEMBER M JOIN PROFILE p ON m.MEM_CODE = p.MEM_CODE
		ORDER BY MEM_CODE
	</select>
	
	<select id="login" resultType="com.test.mybatis.dto.MemberDTO" >
		SELECT M.MEM_CODE, M.ID, M.PW, M.NICKNAME, M.MBTI_CODE, ADMIN_CODE, p."PATH" 
		FROM MEMBER M
			LEFT JOIN ADMIN A ON M.MEM_CODE = A.MEM_CODE
				 JOIN PROFILE p ON m.MEM_CODE = p.MEM_CODE
		WHERE PW = #{arg1} AND ID = #{arg0}
	</select>

	
	<!-- 정수반환 하므로 resultType에 Integer 넣어준다. -->
	<select id="count" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM MEMBER
	</select>
	
	<!-- parameterType="com.test.mybatis.MemberDTO" -->
	<insert id="add">
	<!-- <insert id="add" parameterType="String"> -->
		INSERT INTO MEMBER(MEM_CODE, ID, PW, NICKNAME, MBTI_CODE)
		VALUES(MEM_SEQ.NEXTVAL, #{id}, #{pw}, #{nickname}, #{mbti_code})
	</insert>
	
	<delete id="remove">
		DELETE
		FROM MEMBER
		WHERE MEM_CODE = ${mem_code}
	</delete>
	
	<!-- member, mem_info 동시에 넣는 프로시저 -->
	<insert id="memberJoin" statementType="CALLABLE">
		{CALL MEMBER_JOIN (#{arg0}, #{arg1}, #{arg2})}
	</insert>
	
	<!-- 프로젝트의 팀장 가져오는 쿼리 -->
	<select id="getLeader" resultType="com.test.mybatis.dto.MemberDTO">
		SELECT MEM_CODE, ID, PW, NICKNAME, MBTI_CODE, p.MEM_CODE, p."PATH" 
		FROM MEMBER M JOIN PROFILE p ON m.MEM_CODE = p.MEM_CODE
		WHERE MEM_CODE IN (SELECT MEM_CODE 
						  FROM MEMBER_APPLY M JOIN ROLE_COMP R ON M.RC_CODE = R.RC_CODE
						  WHERE AP_CODE = #{arg0} AND MR_CODE = #{arg1}) 
			 
	</select>
	
	<!--  프로젝트의 프론트 가져오는 쿼리 -->
	<select id="getFront" resultType="com.test.mybatis.dto.MemberDTO" >
		SELECT MEM_CODE, ID, PW, NICKNAME, MBTI_CODE, p.MEM_CODE, p."PATH" 
		FROM MEMBER M JOIN PROFILE p ON m.MEM_CODE = p.MEM_CODE
		WHERE MEM_CODE IN (SELECT MEM_CODE 
						  FROM MEMBER_APPLY M JOIN ROLE_COMP R ON M.RC_CODE = R.RC_CODE
						  WHERE AP_CODE = 'AP0006' AND MR_CODE = 'MR0002')
	</select>
	
	<!-- 프로젝트의 백 가져오는 쿼리 -->
	<select id="getBack" resultType="com.test.mybatis.dto.MemberDTO" >
		SELECT MEM_CODE, ID, PW, NICKNAME, MBTI_CODE, p.MEM_CODE, p."PATH" 
		FROM MEMBER M JOIN PROFILE p ON m.MEM_CODE = p.MEM_CODE
		WHERE MEM_CODE IN (SELECT MEM_CODE 
						  FROM MEMBER_APPLY M JOIN ROLE_COMP R ON M.RC_CODE = R.RC_CODE
						  WHERE AP_CODE = 'AP0006' AND MR_CODE = 'MR0003') 
	</select>
	
	<!-- MEM코드와 CP코드로 MA_CODE 뽑아내기 -->
	<select id="getMacode" resultType="java.lang.String">
		SELECT MA_CODE
		FROM MEMBER_APPLY ma JOIN ROLE_COMP rc ON ma.RC_CODE = RC.RC_CODE
		 					 JOIN APP_OPENING ao ON rc.AP_CODE = ao.AP_CODE
		 					 JOIN C_PROJECT cp ON rc.AP_CODE = CP.AP_CODE
		WHERE MA.MEM_CODE = #{arg0} AND MA.AR_CODE = 'AR0001' AND CP.CP_CODE = #{arg1}
	</select>
	 
	 <!-- 개설신청코드로 팀장 mem_code 뽑기 -->
	 <select id="getLeader_mem" resultType="java.lang.String">
		SELECT m.MEM_CODE
		FROM APP_OPENING ao JOIN ROLE_COMP rc ON ao.AP_CODE = rc.AP_CODE
							JOIN MEMBER_APPLY ma ON rc.RC_CODE = MA.RC_CODE 
							JOIN "MEMBER" m ON MA.MEM_CODE = M.MEM_CODE
		WHERE ao.AP_CODE = #{arg0} AND MA.AR_CODE = 'AR0001' AND RC.MR_CODE = 'MR0001'
	 </select>
	 
	 <!-- 개설신청코드로 팀장 ma_code 뽑기 -->
	 <select id="getLeader_ma" resultType="java.lang.String">
		SELECT ma.MA_CODE
		FROM APP_OPENING ao JOIN ROLE_COMP rc ON ao.AP_CODE = rc.AP_CODE
							JOIN MEMBER_APPLY ma ON rc.RC_CODE = MA.RC_CODE 
							JOIN "MEMBER" m ON MA.MEM_CODE = M.MEM_CODE
		WHERE ao.AP_CODE = #{arg0} AND MA.AR_CODE = 'AR0001' AND RC.MR_CODE = 'MR0001'
	 </select>
	 
	  <!-- 개설 신청 코드로 팀장제외 팀원 뽑아내는 쿼리문 -->
	<select id="getMember" resultType="com.test.mybatis.dto.MemberDTO" >
		SELECT ma.MA_CODE, m.mem_code, m.nickname
		FROM APP_OPENING ao JOIN ROLE_COMP rc ON ao.AP_CODE = rc.AP_CODE
							JOIN MEMBER_APPLY ma ON rc.RC_CODE = MA.RC_CODE 
							JOIN "MEMBER" m ON MA.MEM_CODE = M.MEM_CODE
		WHERE ao.AP_CODE = #{arg0} AND MA.AR_CODE = 'AR0001' AND RC.MR_CODE != 'MR0001'
	</select>
	 
	 <!-- 개설신청코드로 cp_code 뽑기 -->
	 <select id="getCp_code" resultType="java.lang.String">
		SELECT CP_CODE 
		FROM c_project
		WHERE AP_CODE = #{arg0}
	 </select>
	 
	 <!-- 프로필 사진 업데이트 public void changeProfile(String path); -->
	 <update id="changeProfile">
	 	UPDATE PROFILE 
		SET PATH = #{arg0}
		WHERE MEM_CODE = #{arg1}
	 </update>
	 
</mapper>































